{"version":3,"file":"index.cjs","sources":["../src/colorModes.ts","../src/theme.ts","../src/breakpoints.ts","../src/preflight.ts","../src/createCssFunction.ts","../src/scStyled.ts","../src/createStyled.ts","../src/createX.ts","../src/createCreateGlobalStyle.ts","../src/create.ts","../src/index.ts"],"sourcesContent":["import {\n  createGlobalStyle,\n  ThemeContext,\n  ThemeProvider,\n} from 'styled-components'\nimport { createColorModeProvider, createColorStyles } from '@xstyled/core'\n\nconst ColorModeStyle = createGlobalStyle`${(p: {\n  theme: any\n  targetSelector: string\n}) => createColorStyles(p.theme, { targetSelector: p.targetSelector })}`\n\nexport const ColorModeProvider = createColorModeProvider({\n  ThemeContext,\n  ThemeProvider,\n  ColorModeStyle,\n})\n\nexport {\n  useColorMode,\n  getColorModeInitScriptElement,\n  getColorModeInitScriptTag,\n} from '@xstyled/core'\n","import { useContext, ContextType } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { createUseGetter } from '@xstyled/core'\nimport { th } from '@xstyled/system'\n\nexport const useTheme = (): ContextType<typeof ThemeContext> => {\n  return useContext(ThemeContext)\n}\n\nexport const useTh = createUseGetter(th, useTheme)\n\nexport const useAngle = createUseGetter(th.angle, useTheme)\nexport const useAnimation = createUseGetter(th.animation, useTheme)\nexport const useBorder = createUseGetter(th.border, useTheme)\nexport const useBorderColor = createUseGetter(th.borderColor, useTheme)\nexport const useBorderStyle = createUseGetter(th.borderStyle, useTheme)\nexport const useBorderWidth = createUseGetter(th.borderWidth, useTheme)\nexport const useColor = createUseGetter(th.color, useTheme)\nexport const useDuration = createUseGetter(th.duration, useTheme)\nexport const useFont = createUseGetter(th.font, useTheme)\nexport const useFontSize = createUseGetter(th.fontSize, useTheme)\nexport const useFontWeight = createUseGetter(th.fontWeight, useTheme)\nexport const useInset = createUseGetter(th.inset, useTheme)\nexport const useLetterSpacing = createUseGetter(th.letterSpacing, useTheme)\nexport const useLineHeight = createUseGetter(th.lineHeight, useTheme)\nexport const usePercent = createUseGetter(th.percent, useTheme)\nexport const usePx = createUseGetter(th.px, useTheme)\nexport const useRadius = createUseGetter(th.radius, useTheme)\nexport const useRingWidth = createUseGetter(th.ringWidth, useTheme)\nexport const useShadow = createUseGetter(th.shadow, useTheme)\nexport const useSize = createUseGetter(th.size, useTheme)\nexport const useSpace = createUseGetter(th.space, useTheme)\nexport const useTimingFunction = createUseGetter(th.timingFunction, useTheme)\nexport const useTransform = createUseGetter(th.transform, useTheme)\nexport const useTransition = createUseGetter(th.transition, useTheme)\nexport const useTransitionProperty = createUseGetter(\n  th.transitionProperty,\n  useTheme,\n)\nexport const useZIndex = createUseGetter(th.zIndex, useTheme)\n","import {\n  useThemeScreens,\n  useThemeBreakpoint,\n  useThemeUp,\n  useThemeDown,\n} from '@xstyled/core'\nimport { Screens } from '@xstyled/system'\nimport { useTheme } from './theme'\n\nexport { useViewportWidth } from '@xstyled/core'\n\nexport const useScreens = (): Screens => {\n  return useThemeScreens(useTheme())\n}\n\nexport const useBreakpoint = (): string | null => {\n  return useThemeBreakpoint(useTheme())\n}\n\nexport const useUp = (key: string | number): boolean => {\n  return useThemeUp(useTheme(), key)\n}\n\nexport const useDown = (key: string | number): boolean => {\n  return useThemeDown(useTheme(), key)\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { getPreflightStyles } from '@xstyled/system'\n\nexport const Preflight = createGlobalStyle(({ theme }) =>\n  getPreflightStyles(theme),\n)\n","/* eslint-disable no-continue, no-loop-func, no-cond-assign */\nimport {\n  css as scCss,\n  FlattenSimpleInterpolation,\n  ThemedCssFunction,\n} from 'styled-components'\nimport { StyleGenerator, Theme } from '@xstyled/system'\nimport { flattenStrings } from '@xstyled/util'\nimport { createTransform } from '@xstyled/core'\n\nexport type XCSSFunction = ThemedCssFunction<Theme>\n\nexport const createCssFunction = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XCSSFunction => {\n  const transform = createTransform(generator)\n  return ((...args: Parameters<XCSSFunction>) => {\n    const scCssArgs = scCss(...args)\n    const flattenedArgs = flattenStrings(scCssArgs as any[])\n    return flattenedArgs.map(transform) as FlattenSimpleInterpolation\n  }) as XCSSFunction\n}\n","import styled from 'styled-components'\n\n// Provide interop since `styled-components` does not work out of the box with ESM\nexport const scStyled =\n  // @ts-ignore\n  typeof styled === 'function' ? styled : styled.default\n","/* eslint-disable no-continue, no-loop-func, no-cond-assign */\nimport type { ElementType } from 'react'\nimport { BoxElements } from '@xstyled/core'\nimport { string } from '@xstyled/util'\nimport { StyleGenerator, StyleGeneratorProps, Theme } from '@xstyled/system'\nimport {\n  StyledConfig,\n  ThemedBaseStyledInterface,\n  ThemedStyledFunction,\n} from 'styled-components'\nimport { scStyled } from './scStyled'\nimport { createCssFunction, XCSSFunction } from './createCssFunction'\n\nconst getCreateStyle = (\n  baseCreateStyle: ThemedStyledFunction<any, any>,\n  css: XCSSFunction,\n  generator?: StyleGenerator,\n) => {\n  const createStyle = (...args: Parameters<typeof css>) =>\n    // @ts-ignore\n    baseCreateStyle`${css(...args)}${generator}`\n  createStyle.attrs = (attrs: Parameters<typeof baseCreateStyle.attrs>[0]) =>\n    getCreateStyle(baseCreateStyle.attrs(attrs), css, generator)\n  createStyle.withConfig = (config: StyledConfig<any>) =>\n    getCreateStyle(baseCreateStyle.withConfig(config), css, generator)\n  return createStyle\n}\n\ntype BoxStyledTags<TProps extends object> = {\n  [Key in keyof BoxElements]: ThemedStyledFunction<\n    BoxElements[Key],\n    Theme,\n    TProps\n  >\n}\n\nexport interface XStyled<TGen extends StyleGenerator>\n  extends ThemedBaseStyledInterface<Theme>,\n    BoxStyledTags<StyleGeneratorProps<TGen>> {}\n\nconst createShouldForwardProp = (\n  generator: StyleGenerator,\n): ((\n  prop: string | number | symbol,\n  defaultValidatorFn: (prop: string | number | symbol) => boolean,\n  elementToBeCreated?: ElementType,\n) => boolean) => {\n  const propSet = new Set<string>(generator.meta.props)\n  return (\n    prop: string | number | symbol,\n    defaultValidatorFn: (prop: string | number | symbol) => boolean,\n    elementToBeCreated?: ElementType,\n  ) => {\n    if (string(prop) && propSet.has(prop)) {\n      return false\n    }\n    if (typeof elementToBeCreated === 'string') {\n      // We must test elementToBeCreated so we can pass through props for <x.div\n      // as={Component} />. However elementToBeCreated isn't available until\n      // styled-components 5.2.4 or 6, and in the meantime will be undefined.\n      // This means that HTML elements could get unwanted props, but ultimately\n      // this is a bug in the caller, because why are they passing unwanted\n      // props?\n      return defaultValidatorFn(prop)\n    }\n    return true\n  }\n}\n\nexport const createBaseStyled = <TGen extends StyleGenerator>(\n  css: XCSSFunction,\n  generator?: TGen,\n): XStyled<TGen> => {\n  const config = generator\n    ? {\n        shouldForwardProp: createShouldForwardProp(generator),\n      }\n    : {}\n  return ((component: Parameters<typeof scStyled>[0]) => {\n    const baseStyled = scStyled(component)\n    return getCreateStyle(\n      config ? baseStyled.withConfig(config) : baseStyled,\n      css,\n      generator,\n    )\n  }) as XStyled<TGen>\n}\n\nexport const createStyled = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XStyled<TGen> => {\n  const css = createCssFunction(generator)\n  const styled = createBaseStyled(css)\n  const xstyled = createBaseStyled(css, generator)\n  styled.box = xstyled('div')\n  Object.keys(scStyled).forEach((key) => {\n    // @ts-ignore\n    styled[key] = styled(key)\n    // @ts-ignore\n    styled[`${key}Box`] = xstyled(key)\n  })\n  return styled\n}\n","/* eslint-disable no-continue, no-loop-func, no-cond-assign */\nimport { StyledComponent, DefaultTheme } from 'styled-components'\nimport { scStyled } from './scStyled'\nimport { StyleGenerator, StyleGeneratorProps } from '@xstyled/system'\nimport { createBaseStyled } from './createStyled'\nimport { createCssFunction } from './createCssFunction'\n\ntype JSXElementKeys = keyof JSX.IntrinsicElements\n\ntype SafeIntrinsicElement<T extends keyof JSX.IntrinsicElements> = (\n  props: Omit<JSX.IntrinsicElements[T], 'color'>,\n) => React.ReactElement<any, T>\n\nexport type X<TGen extends StyleGenerator> = {\n  [Key in JSXElementKeys]: StyledComponent<\n    SafeIntrinsicElement<Key>,\n    DefaultTheme,\n    StyleGeneratorProps<TGen>,\n    'color'\n  >\n}\n\nexport const createX = <TGen extends StyleGenerator>(\n  generator: TGen,\n): X<TGen> => {\n  const xstyled = createBaseStyled(createCssFunction(generator), generator)\n  const x = {} as X<TGen>\n  Object.keys(scStyled).forEach((tag) => {\n    // @ts-ignore\n    x[tag] = xstyled(tag)``\n  })\n  return x\n}\n","import { createGlobalStyle as scCreateGlobalStyle } from 'styled-components'\nimport { StyleGenerator } from '@xstyled/system'\nimport { createCssFunction } from './createCssFunction'\n\nexport type XCreateGlobalStyle = typeof scCreateGlobalStyle\n\nexport const createCreateGlobalStyle = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XCreateGlobalStyle => {\n  const css = createCssFunction(generator)\n  return ((\n    ...args: Parameters<XCreateGlobalStyle>\n  ): ReturnType<XCreateGlobalStyle> =>\n    scCreateGlobalStyle([\n      // @ts-ignore\n      css(...args),\n    ])) as XCreateGlobalStyle\n}\n","import { StyleGenerator } from '@xstyled/system'\nimport { createCssFunction, XCSSFunction } from './createCssFunction'\nimport { createX, X } from './createX'\nimport { createStyled, XStyled } from './createStyled'\nimport {\n  createCreateGlobalStyle,\n  XCreateGlobalStyle,\n} from './createCreateGlobalStyle'\n\nexport interface XStyledSet<TGen extends StyleGenerator> {\n  css: XCSSFunction\n  x: X<TGen>\n  styled: XStyled<TGen>\n  createGlobalStyle: XCreateGlobalStyle\n}\n\nexport const createCss = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XStyledSet<TGen> => {\n  return {\n    css: createCssFunction(generator),\n    x: createX(generator),\n    styled: createStyled(generator),\n    createGlobalStyle: createCreateGlobalStyle(generator),\n  }\n}\n","export {\n  isStyledComponent,\n  keyframes,\n  ServerStyleSheet,\n  StyleSheetManager,\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n  withTheme,\n} from 'styled-components'\nexport * from './colorModes'\nexport * from './theme'\nexport * from './breakpoints'\nexport * from './preflight'\nexport * from '@xstyled/system'\nexport * from './create'\n\n// Create and export default system\nimport { system } from '@xstyled/system'\nimport { createCss } from './create'\nimport type { XStyled } from './createStyled'\nimport type { X } from './createX'\n\nconst { css, styled, x, createGlobalStyle } = createCss(system)\nexport { css, styled, styled as default, x, createGlobalStyle, XStyled, X }\n"],"names":["createGlobalStyle","createColorStyles","createColorModeProvider","ThemeContext","ThemeProvider","useContext","createUseGetter","th","useThemeScreens","useThemeBreakpoint","useThemeUp","useThemeDown","getPreflightStyles","createTransform","scCss","flattenStrings","styled","string","scCreateGlobalStyle","system"],"mappings":"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"}