import {
  useMenuItem
} from "../__chunks/JRZOTPWS.js";
import "../__chunks/W7JXAQKF.js";
import {
  MenuItemCheckedContext,
  useMenuScopedContext
} from "../__chunks/2GC3IEM7.js";
import {
  useRadio
} from "../__chunks/DE62M4L2.js";
import "../__chunks/NRFPH2ON.js";
import "../__chunks/XCH4OEEE.js";
import "../__chunks/IQXVWBXC.js";
import "../__chunks/CAIAWNDV.js";
import "../__chunks/XIA3HAXM.js";
import "../__chunks/OXPV2NBK.js";
import "../__chunks/5C7J4IAS.js";
import "../__chunks/74KKBFVP.js";
import "../__chunks/5DA3HK6G.js";
import "../__chunks/547DFODS.js";
import "../__chunks/5YYGDU4E.js";
import "../__chunks/56KWVYDN.js";
import "../__chunks/YTHH33BK.js";
import "../__chunks/BMLNRUFQ.js";
import {
  createElement,
  createHook,
  createMemoComponent
} from "../__chunks/CFEUKV6C.js";
import "../__chunks/WHAB4XD6.js";
import {
  useWrapElement
} from "../__chunks/J7Q2EO23.js";
import "../__chunks/CP3U4HPL.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/PNRLI7OV.js";

// src/menu/menu-item-radio.tsx
import { invariant } from "@ariakit/core/utils/misc";
import { jsx } from "react/jsx-runtime";
var useMenuItemRadio = createHook(
  (_a) => {
    var _b = _a, {
      store,
      name,
      value,
      checked,
      onChange: onChangeProp,
      hideOnClick = false
    } = _b, props = __objRest(_b, [
      "store",
      "name",
      "value",
      "checked",
      "onChange",
      "hideOnClick"
    ]);
    const context = useMenuScopedContext();
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "MenuItemRadio must be wrapped in a MenuList or Menu component"
    );
    const isChecked = store.useState(
      (state) => checked != null ? checked : state.values[name] === value
    );
    props = useWrapElement(
      props,
      (element) => /* @__PURE__ */ jsx(MenuItemCheckedContext.Provider, { value: !!isChecked, children: element }),
      [isChecked]
    );
    props = __spreadValues({
      role: "menuitemradio"
    }, props);
    props = useRadio(__spreadValues({
      value,
      checked: isChecked,
      onChange: (event) => {
        onChangeProp == null ? void 0 : onChangeProp(event);
        if (event.defaultPrevented)
          return;
        store == null ? void 0 : store.setValue(name, value);
      }
    }, props));
    props = useMenuItem(__spreadValues({ store, hideOnClick }, props));
    return props;
  }
);
var MenuItemRadio = createMemoComponent(
  (props) => {
    const htmlProps = useMenuItemRadio(props);
    return createElement("div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  MenuItemRadio.displayName = "MenuItemRadio";
}
export {
  MenuItemRadio,
  useMenuItemRadio
};
