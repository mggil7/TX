import {
  useFormContext
} from "../__chunks/NJS632IW.js";
import {
  useButton
} from "../__chunks/TONP6TZ5.js";
import "../__chunks/CAIAWNDV.js";
import "../__chunks/74KKBFVP.js";
import "../__chunks/YTHH33BK.js";
import "../__chunks/BMLNRUFQ.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/CFEUKV6C.js";
import "../__chunks/J7Q2EO23.js";
import "../__chunks/CP3U4HPL.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/PNRLI7OV.js";

// src/form/form-reset.ts
import { invariant } from "@ariakit/core/utils/misc";
var useFormReset = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "FormReset must be wrapped in a Form component."
    );
    props = __spreadValues({
      type: "reset",
      disabled: store.useState("submitting")
    }, props);
    props = useButton(props);
    return props;
  }
);
var FormReset = createComponent((props) => {
  const htmlProps = useFormReset(props);
  return createElement("button", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  FormReset.displayName = "FormReset";
}
export {
  FormReset,
  useFormReset
};
