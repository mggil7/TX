import {
  useCompositeContainer
} from "../__chunks/ZYB5SMUW.js";
import {
  useToolbarItem
} from "../__chunks/LBTB6WEV.js";
import "../__chunks/IQXVWBXC.js";
import "../__chunks/CAIAWNDV.js";
import "../__chunks/XIA3HAXM.js";
import "../__chunks/OXPV2NBK.js";
import {
  useToolbarContext
} from "../__chunks/IPFII6JW.js";
import "../__chunks/5C7J4IAS.js";
import "../__chunks/74KKBFVP.js";
import "../__chunks/YTHH33BK.js";
import "../__chunks/BMLNRUFQ.js";
import {
  createElement,
  createHook,
  createMemoComponent
} from "../__chunks/CFEUKV6C.js";
import "../__chunks/WHAB4XD6.js";
import "../__chunks/J7Q2EO23.js";
import "../__chunks/CP3U4HPL.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/PNRLI7OV.js";

// src/toolbar/toolbar-container.ts
var useToolbarContainer = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useToolbarContext();
    store = store || context;
    props = useCompositeContainer(__spreadValues({ store }, props));
    props = useToolbarItem(__spreadValues({ store }, props));
    return props;
  }
);
var ToolbarContainer = createMemoComponent(
  (props) => {
    const htmlProps = useToolbarContainer(props);
    return createElement("div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  ToolbarContainer.displayName = "ToolbarContainer";
}
export {
  ToolbarContainer,
  useToolbarContainer
};
