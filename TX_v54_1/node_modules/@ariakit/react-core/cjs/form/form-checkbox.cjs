"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _JJ22W2WScjs = require('../__chunks/JJ22W2WS.cjs');


var _VLI66TFLcjs = require('../__chunks/VLI66TFL.cjs');


var _2H4Y2NEYcjs = require('../__chunks/2H4Y2NEY.cjs');


var _ZIEW4CQOcjs = require('../__chunks/ZIEW4CQO.cjs');
require('../__chunks/NER6RNCQ.cjs');
require('../__chunks/FO6MB5HF.cjs');
require('../__chunks/HWZH54NB.cjs');
require('../__chunks/FMI5QF7N.cjs');
require('../__chunks/NHZBX2RS.cjs');
require('../__chunks/GQAB4M3B.cjs');
require('../__chunks/LHHW5ZQP.cjs');




var _Z5PUIG6Acjs = require('../__chunks/Z5PUIG6A.cjs');
require('../__chunks/EVNF7KMT.cjs');
require('../__chunks/5WLTMVVQ.cjs');
require('../__chunks/7WUTS26Y.cjs');



var _72I2GWXFcjs = require('../__chunks/72I2GWXF.cjs');

// src/form/form-checkbox.ts
var _misc = require('@ariakit/core/utils/misc');
var useFormCheckbox = _Z5PUIG6Acjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, name: nameProp, value, checked, defaultChecked } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["store", "name", "value", "checked", "defaultChecked"]);
    const context = _VLI66TFLcjs.useFormContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "FormCheckbox must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const checkboxStore = _ZIEW4CQOcjs.useCheckboxStore.call(void 0, {
      value: store.useValue(name),
      setValue: (value2) => store == null ? void 0 : store.setValue(name, value2)
    });
    props = _2H4Y2NEYcjs.useCheckbox.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, { store: checkboxStore, value, checked }, props));
    props = _JJ22W2WScjs.useFormField.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {
      store,
      name,
      "aria-labelledby": void 0
    }, props));
    return props;
  }
);
var FormCheckbox = _Z5PUIG6Acjs.createMemoComponent.call(void 0, 
  (props) => {
    const htmlProps = useFormCheckbox(props);
    return _Z5PUIG6Acjs.createElement.call(void 0, "input", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  FormCheckbox.displayName = "FormCheckbox";
}



exports.FormCheckbox = FormCheckbox; exports.useFormCheckbox = useFormCheckbox;
