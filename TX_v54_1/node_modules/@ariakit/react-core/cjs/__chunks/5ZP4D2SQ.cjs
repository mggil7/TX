"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _FPNO6JL5cjs = require('./FPNO6JL5.cjs');


var _GUWJ7VTOcjs = require('./GUWJ7VTO.cjs');




var _Z5PUIG6Acjs = require('./Z5PUIG6A.cjs');


var _EVNF7KMTcjs = require('./EVNF7KMT.cjs');





var _5WLTMVVQcjs = require('./5WLTMVVQ.cjs');




var _72I2GWXFcjs = require('./72I2GWXF.cjs');

// src/radio/radio.ts
var _react = require('react');
function getIsChecked(value, storeValue) {
  if (storeValue === void 0)
    return;
  if (value != null && storeValue != null) {
    return storeValue === value;
  }
  return !!storeValue;
}
function isNativeRadio(tagName, type) {
  return tagName === "input" && (!type || type === "radio");
}
var useRadio = _Z5PUIG6Acjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, value, checked } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["store", "value", "checked"]);
    const context = _FPNO6JL5cjs.useRadioContext.call(void 0, );
    store = store || context;
    const id = _5WLTMVVQcjs.useId.call(void 0, props.id);
    const ref = _react.useRef.call(void 0, null);
    const isChecked = _EVNF7KMTcjs.useStoreState.call(void 0, 
      store,
      (state) => checked != null ? checked : getIsChecked(value, state == null ? void 0 : state.value)
    );
    _react.useEffect.call(void 0, () => {
      if (!id)
        return;
      if (!isChecked)
        return;
      const isActiveItem = (store == null ? void 0 : store.getState().activeId) === id;
      if (isActiveItem)
        return;
      store == null ? void 0 : store.setActiveId(id);
    }, [store, isChecked, id]);
    const onChangeProp = props.onChange;
    const tagName = _5WLTMVVQcjs.useTagName.call(void 0, ref, props.as || "input");
    const nativeRadio = isNativeRadio(tagName, props.type);
    const onChange = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      if (props.disabled) {
        event.preventDefault();
        event.stopPropagation();
        return;
      }
      if (!nativeRadio) {
        event.currentTarget.checked = true;
      }
      onChangeProp == null ? void 0 : onChangeProp(event);
      if (event.defaultPrevented)
        return;
      store == null ? void 0 : store.setValue(value);
    });
    const onClickProp = props.onClick;
    const onClick = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented)
        return;
      if (nativeRadio)
        return;
      onChange(event);
    });
    const onFocusProp = props.onFocus;
    const onFocus = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented)
        return;
      if (!nativeRadio)
        return;
      if (!store)
        return;
      const { moves, activeId } = store.getState();
      if (!moves)
        return;
      if (id && activeId !== id)
        return;
      onChange(event);
    });
    props = _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {
      id,
      role: !nativeRadio ? "radio" : void 0,
      type: nativeRadio ? "radio" : void 0,
      "aria-checked": isChecked
    }, props), {
      ref: _5WLTMVVQcjs.useMergeRefs.call(void 0, ref, props.ref),
      onChange,
      onClick,
      onFocus
    });
    props = _GUWJ7VTOcjs.useCompositeItem.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, { store, clickOnEnter: !nativeRadio }, props));
    return _72I2GWXFcjs.__spreadValues.call(void 0, {
      value: nativeRadio ? value : void 0,
      checked: isChecked
    }, props);
  }
);
var Radio = _Z5PUIG6Acjs.createMemoComponent.call(void 0, (props) => {
  const htmlProps = useRadio(props);
  return _Z5PUIG6Acjs.createElement.call(void 0, "input", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  Radio.displayName = "Radio";
}




exports.useRadio = useRadio; exports.Radio = Radio;
