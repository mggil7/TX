"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _Z3TLXRS7cjs = require('./Z3TLXRS7.cjs');


var _TLA46MN6cjs = require('./TLA46MN6.cjs');


var _BWQVQDGCcjs = require('./BWQVQDGC.cjs');

// src/dialog/utils/mark-tree-outside.ts
var _misc = require('@ariakit/core/utils/misc');
function getPropertyName(id = "", ancestor = false) {
  return `__ariakit-dialog-${ancestor ? "ancestor" : "outside"}${id ? `-${id}` : ""}`;
}
function markElement(element, id = "") {
  return _misc.chain.call(void 0, 
    _BWQVQDGCcjs.setProperty.call(void 0, element, getPropertyName(), true),
    _BWQVQDGCcjs.setProperty.call(void 0, element, getPropertyName(id), true)
  );
}
function markAncestor(element, id = "") {
  return _misc.chain.call(void 0, 
    _BWQVQDGCcjs.setProperty.call(void 0, element, getPropertyName("", true), true),
    _BWQVQDGCcjs.setProperty.call(void 0, element, getPropertyName(id, true), true)
  );
}
function isElementMarked(element, id) {
  const ancestorProperty = getPropertyName(id, true);
  if (element[ancestorProperty])
    return true;
  const elementProperty = getPropertyName(id);
  do {
    if (element[elementProperty])
      return true;
    if (!element.parentElement)
      return false;
    element = element.parentElement;
  } while (true);
}
function markTreeOutside(id, elements) {
  const cleanups = [];
  const ids = elements.map((el) => el == null ? void 0 : el.id);
  _TLA46MN6cjs.walkTreeOutside.call(void 0, 
    id,
    elements,
    (element) => {
      if (_Z3TLXRS7cjs.isBackdrop.call(void 0, element, ...ids))
        return;
      cleanups.unshift(markElement(element, id));
    },
    (ancestor, element) => {
      const isAnotherDialogAncestor = element.hasAttribute("data-dialog") && element.id !== id;
      if (isAnotherDialogAncestor)
        return;
      cleanups.unshift(markAncestor(ancestor, id));
    }
  );
  const restoreAccessibilityTree = () => {
    cleanups.forEach((fn) => fn());
  };
  return restoreAccessibilityTree;
}






exports.markElement = markElement; exports.markAncestor = markAncestor; exports.isElementMarked = isElementMarked; exports.markTreeOutside = markTreeOutside;
