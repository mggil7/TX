"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _35G5ZXPHcjs = require('../__chunks/35G5ZXPH.cjs');
require('../__chunks/VGU6RMHO.cjs');
require('../__chunks/EZKYHQVF.cjs');
require('../__chunks/HWZH54NB.cjs');


var _Q6W7IWNJcjs = require('../__chunks/Q6W7IWNJ.cjs');
require('../__chunks/AKOG5S2T.cjs');
require('../__chunks/W6ZRSMO5.cjs');
require('../__chunks/A2NMYLCG.cjs');
require('../__chunks/GQAB4M3B.cjs');
require('../__chunks/LHHW5ZQP.cjs');


var _KSFAO77Ecjs = require('../__chunks/KSFAO77E.cjs');




var _Z5PUIG6Acjs = require('../__chunks/Z5PUIG6A.cjs');



var _5WLTMVVQcjs = require('../__chunks/5WLTMVVQ.cjs');
require('../__chunks/7WUTS26Y.cjs');




var _72I2GWXFcjs = require('../__chunks/72I2GWXF.cjs');

// src/hovercard/hovercard-disclosure.tsx
var _react = require('react');
var _dom = require('@ariakit/core/utils/dom');
var _events = require('@ariakit/core/utils/events');
var _misc = require('@ariakit/core/utils/misc');
var _store = require('@ariakit/core/utils/store');
var _jsxruntime = require('react/jsx-runtime');
var useHovercardDisclosure = _Z5PUIG6Acjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["store"]);
    const context = _Q6W7IWNJcjs.useHovercardProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "HovercardDisclosure must receive a `store` prop or be wrapped in a HovercardProvider component."
    );
    const [visible, setVisible] = _react.useState.call(void 0, false);
    _react.useEffect.call(void 0, () => {
      if (!visible)
        return;
      const onBlur = (event) => {
        if (!store)
          return;
        const nextActiveElement = event.relatedTarget;
        if (nextActiveElement) {
          const {
            anchorElement: anchor,
            popoverElement: popover,
            disclosureElement: disclosure
          } = store.getState();
          if (anchor && _dom.contains.call(void 0, anchor, nextActiveElement))
            return;
          if (popover && _dom.contains.call(void 0, popover, nextActiveElement))
            return;
          if (disclosure && _dom.contains.call(void 0, disclosure, nextActiveElement))
            return;
          if (nextActiveElement.hasAttribute("data-focus-trap"))
            return;
        }
        setVisible(false);
      };
      return _events.addGlobalEventListener.call(void 0, "focusout", onBlur, true);
    }, [visible, store]);
    _react.useEffect.call(void 0, () => {
      return _store.sync.call(void 0, store, ["anchorElement"], (state) => {
        const anchor = state.anchorElement;
        if (!anchor)
          return;
        const observer = new MutationObserver(() => {
          if (!anchor.hasAttribute("data-focus-visible"))
            return;
          setVisible(true);
        });
        observer.observe(anchor, { attributeFilter: ["data-focus-visible"] });
        return () => observer.disconnect();
      });
    }, [store]);
    const onClickProp = props.onClick;
    const onClick = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented)
        return;
      store == null ? void 0 : store.setAutoFocusOnShow(true);
    });
    const onFocusProp = props.onFocus;
    const onFocus = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented)
        return;
      setVisible(true);
    });
    const { style } = _KSFAO77Ecjs.useVisuallyHidden.call(void 0, );
    if (!visible) {
      props = _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, props), {
        style: _72I2GWXFcjs.__spreadValues.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, style), props.style)
      });
    }
    const children = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, 
      "svg",
      {
        display: "block",
        fill: "none",
        stroke: "currentColor",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "1.5pt",
        viewBox: "0 0 16 16",
        height: "1em",
        width: "1em",
        children: /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "polyline", { points: "4,6 8,10 12,6" })
      }
    );
    props = _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {
      children
    }, props), {
      ref: _5WLTMVVQcjs.useMergeRefs.call(void 0, store.setDisclosureElement, props.ref),
      onClick,
      onFocus
    });
    props = _35G5ZXPHcjs.useDialogDisclosure.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var HovercardDisclosure = _Z5PUIG6Acjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useHovercardDisclosure(props);
    return _Z5PUIG6Acjs.createElement.call(void 0, "button", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  HovercardDisclosure.displayName = "HovercardDisclosure";
}



exports.HovercardDisclosure = HovercardDisclosure; exports.useHovercardDisclosure = useHovercardDisclosure;
