"use strict";Object.defineProperty(exports, "__esModule", {value: true});


var _HBZJ2UC5cjs = require('../__chunks/HBZJ2UC5.cjs');


var _SELCJFCBcjs = require('../__chunks/SELCJFCB.cjs');
require('../__chunks/KLZID3QO.cjs');
require('../__chunks/H7R5D2FR.cjs');
require('../__chunks/NHZBX2RS.cjs');
require('../__chunks/GQAB4M3B.cjs');
require('../__chunks/LHHW5ZQP.cjs');




var _Z5PUIG6Acjs = require('../__chunks/Z5PUIG6A.cjs');


var _5WLTMVVQcjs = require('../__chunks/5WLTMVVQ.cjs');
require('../__chunks/7WUTS26Y.cjs');



var _72I2GWXFcjs = require('../__chunks/72I2GWXF.cjs');

// src/tab/tab-list.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var useTabList = _Z5PUIG6Acjs.createHook.call(void 0, (_a) => {
  var _b = _a, { store } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["store"]);
  const context = _HBZJ2UC5cjs.useTabProviderContext.call(void 0, );
  store = store || context;
  _misc.invariant.call(void 0, 
    store,
    process.env.NODE_ENV !== "production" && "TabList must receive a `store` prop or be wrapped in a TabProvider component."
  );
  const orientation = store.useState(
    (state) => state.orientation === "both" ? void 0 : state.orientation
  );
  props = _5WLTMVVQcjs.useWrapElement.call(void 0, 
    props,
    (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _HBZJ2UC5cjs.TabScopedContextProvider, { value: store, children: element }),
    [store]
  );
  props = _72I2GWXFcjs.__spreadValues.call(void 0, {
    role: "tablist",
    "aria-orientation": orientation
  }, props);
  props = _SELCJFCBcjs.useComposite.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, { store }, props));
  return props;
});
var TabList = _Z5PUIG6Acjs.createComponent.call(void 0, (props) => {
  const htmlProps = useTabList(props);
  return _Z5PUIG6Acjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  TabList.displayName = "TabList";
}



exports.TabList = TabList; exports.useTabList = useTabList;
