import type { CheckboxOptions } from "../checkbox/checkbox.js";
import type { As, Props } from "../utils/types.js";
import type { MenuItemOptions } from "./menu-item.js";
import type { MenuStore } from "./menu-store.js";
/**
 * Returns props to create a `MenuItemCheckbox` component.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * const store = useMenuStore({ defaultValues: { apple: false } });
 * const props = useMenuItemCheckbox({ store, name: "apple" });
 * <MenuButton store={store}>Fruits</MenuButton>
 * <Menu store={store}>
 *   <Role {...props}>Apple</Role>
 * </Menu>
 * ```
 */
export declare const useMenuItemCheckbox: import("../utils/types.js").Hook<MenuItemCheckboxOptions<"div">>;
/**
 * Renders a menu item checkbox inside a menu.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * <MenuProvider defaultValues={{ apple: false }}>
 *   <MenuButton>Fruits</MenuButton>
 *   <Menu>
 *     <MenuItemCheckbox name="apple">Apple</MenuItemCheckbox>
 *   </Menu>
 * </MenuProvider>
 * ```
 */
export declare const MenuItemCheckbox: import("../utils/types.js").Component<MenuItemCheckboxOptions<"div">>;
export interface MenuItemCheckboxOptions<T extends As = "div"> extends MenuItemOptions<T>, Omit<CheckboxOptions<T>, "store"> {
    /**
     * Object returned by the
     * [`useMenuStore`](https://ariakit.org/reference/use-menu-store) hook. If not
     * provided, the closest [`Menu`](https://ariakit.org/reference/menu) or
     * [`MenuProvider`](https://ariakit.org/reference/menu-provider) components'
     * context will be used.
     */
    store?: MenuStore;
    /**
     * MenuItemCheckbox's name as specified in the
     * [`values`](https://ariakit.org/reference/menu-provider#values) state.
     */
    name: string;
    /**
     * @default false
     */
    hideOnClick?: MenuItemOptions<T>["hideOnClick"];
}
export type MenuItemCheckboxProps<T extends As = "div"> = Props<MenuItemCheckboxOptions<T>>;
