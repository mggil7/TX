import type { CompositeStoreFunctions, CompositeStoreItem, CompositeStoreOptions, CompositeStoreState } from "../composite/composite-store.js";
import type { PopoverStoreFunctions, PopoverStoreOptions, PopoverStoreState } from "../popover/popover-store.js";
import type { Store, StoreOptions, StoreProps } from "../utils/store.js";
import type { SetState } from "../utils/types.js";
type Item = CompositeStoreItem & {
    value?: string;
};
/**
 * Creates a combobox store.
 */
export declare function createComboboxStore(props?: ComboboxStoreProps): ComboboxStore;
export type ComboboxStoreItem = Item;
export interface ComboboxStoreState extends CompositeStoreState<Item>, PopoverStoreState {
    /**
     * @default true
     */
    includesBaseElement: boolean;
    /**
     * The input value.
     *
     * Live examples:
     * - [ComboboxGroup](https://ariakit.org/examples/combobox-group)
     * - [Combobox with links](https://ariakit.org/examples/combobox-links)
     * - [Combobox filtering](https://ariakit.org/examples/combobox-filtering)
     * - [Multi-selectable
     *   Combobox](https://ariakit.org/examples/combobox-multiple)
     * - [Textarea with inline
     *   Combobox](https://ariakit.org/examples/combobox-textarea)
     */
    value: string;
    /**
     * The value of the current active item.
     */
    activeValue: string | undefined;
    /**
     * Whether to reset the value when the combobox popover is hidden.
     *
     * Live examples:
     * - [Multi-selectable
     *   Combobox](https://ariakit.org/examples/combobox-multiple)
     * @default false
     */
    resetValueOnHide: boolean;
}
export interface ComboboxStoreFunctions extends CompositeStoreFunctions<Item>, PopoverStoreFunctions {
    /**
     * Sets the `value` state.
     *
     * Live examples:
     * - [Multi-selectable
     *   Combobox](https://ariakit.org/examples/combobox-multiple)
     * - [Textarea with inline
     *   Combobox](https://ariakit.org/examples/combobox-textarea)
     * @example
     * store.setValue("Hello world");
     * store.setValue((value) => value + "!");
     */
    setValue: SetState<ComboboxStoreState["value"]>;
}
export interface ComboboxStoreOptions extends StoreOptions<ComboboxStoreState, "includesBaseElement" | "value" | "resetValueOnHide">, CompositeStoreOptions<Item>, PopoverStoreOptions {
    /**
     * @default null
     */
    defaultActiveId?: CompositeStoreOptions<Item>["activeId"];
    /**
     * The combobox initial value.
     *
     * Live examples:
     * - [Multi-selectable
     *   Combobox](https://ariakit.org/examples/combobox-multiple)
     * @default ""
     */
    defaultValue?: ComboboxStoreState["value"];
}
export type ComboboxStoreProps = ComboboxStoreOptions & StoreProps<ComboboxStoreState>;
export type ComboboxStore = ComboboxStoreFunctions & Store<ComboboxStoreState>;
export {};
