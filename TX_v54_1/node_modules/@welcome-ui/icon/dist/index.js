var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Icon: () => Icon2,
  StyledIcon: () => StyledIcon
});
module.exports = __toCommonJS(src_exports);
var import_react = __toESM(require("react"));
var import_system = require("@welcome-ui/system");

// src/styles.ts
var import_styled_components = __toESM(require("@xstyled/styled-components"));
var iconSvgStrokedStyles = import_styled_components.css`
  g,
  path {
    stroke: inherit;
    fill: none;
  }
`;
var iconSvgFilledStyles = import_styled_components.css`
  g,
  path {
    stroke: none;
  }
`;
var Icon = (0, import_styled_components.default)("svg")(({ isFlag, size = "md", stroked, theme }) => {
  const formattedSize = theme.icons[size] || size;
  return import_styled_components.css`
    ${!isFlag && (stroked ? iconSvgStrokedStyles : iconSvgFilledStyles)};
    width: ${formattedSize};
    height: ${formattedSize};
    ${import_styled_components.system};
  `;
});

// src/index.tsx
var Icon2 = (0, import_system.forwardRef)(
  ({ content, dataTestId, size = "md", title, ...props }, ref) => {
    const className = props.className || "";
    if (!content) {
      return null;
    }
    return /* @__PURE__ */ import_react.default.createElement(
      Icon,
      {
        alt: title,
        dangerouslySetInnerHTML: { __html: content.block },
        "data-testid": dataTestId && `icon-${dataTestId}`,
        isFlag: content.isFlag,
        ref,
        role: "img",
        size,
        stroked: content.stroked,
        title,
        viewBox: content.viewBox || "0 0 100 100",
        ...props,
        className: `${className} wui-icon`
      }
    );
  }
);
Icon2.displayName = "Icon";
var StyledIcon = Icon;
