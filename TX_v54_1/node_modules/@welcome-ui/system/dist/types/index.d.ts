import React from 'react';
import { SystemProps } from '@xstyled/styled-components';
import * as S from '@xstyled/styled-components';
import { StyledConfig } from 'styled-components';
/**
 * @deprecated use system from @xstyled/syled-components instead
 */
export declare const system: S.StyleGenerator<WuiSystemProps>;
/**
 * @deprecated use system from @xstyled/syled-components instead
 */
export declare const wrapperSystem: S.StyleGenerator<WuiWrapperSystemProps>;
/**
 * @deprecated use system from @xstyled/syled-components instead
 */
export declare const componentSystem: S.StyleGenerator<unknown>;
export declare const filterSystemProps: (prop: string) => boolean;
export declare const shouldForwardProp: StyledConfig['shouldForwardProp'];
export type WuiOldProps = S.OpacityProps & S.OverflowProps & S.TransitionProps & S.ZIndexProps & S.TopProps & S.RightProps & S.BottomProps & S.LeftProps;
export type WuiSystemProps = S.BackgroundsProps & S.BorderProps & S.BoxShadowProps & S.ColorProps & S.DisplayProps & S.FlexboxesProps & S.GridsProps & S.HeightProps & S.MaxHeightProps & S.MaxWidthProps & S.MinHeightProps & S.MinWidthProps & S.SpaceProps & S.TypographyProps & S.VerticalAlignProps & S.WidthProps & WuiOldProps;
export type WuiWrapperSystemProps = S.MarginProps & S.MarginBottomProps & S.MarginLeftProps & S.MarginRightProps & S.MarginTopProps & S.MarginXProps & S.MarginYProps & S.WidthProps & WuiOldProps;
export interface WuiTestProps {
    dataTestId?: string;
}
export type WuiProps = SystemProps;
export type As<Props = any> = React.ElementType<Props>;
export type RightJoinProps<SourceProps, OverrideProps> = Omit<SourceProps, keyof OverrideProps> & OverrideProps;
export type MergeProps<ComponentProps, Props, WuiProps> = RightJoinProps<ComponentProps, Props> & RightJoinProps<WuiProps, Props>;
export type CreateWuiProps<Component extends As, Props = {}> = MergeProps<Omit<React.ComponentProps<Component>, keyof WuiProps>, Props, WuiProps & WuiTestProps & {
    as?: As;
}>;
export type CreateWuiComponent<Component extends As, Options = {}> = {
    <AsComponent extends As>(props: CreateWuiProps<AsComponent, Options> & {
        as: AsComponent;
    }): JSX.Element;
    (props: CreateWuiProps<Component, Options>): JSX.Element;
    displayName?: string;
};
export declare const forwardRef: <Component extends As<any>, Props_1 = {}>(component: React.ForwardRefRenderFunction<any, Props_1>) => CreateWuiComponent<Component, Props_1>;
export type ExtraSize = number | string;
