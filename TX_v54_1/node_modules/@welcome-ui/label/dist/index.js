var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Label: () => Label2,
  StyledLabel: () => StyledLabel
});
module.exports = __toCommonJS(src_exports);
var import_react = __toESM(require("react"));
var import_icons = require("@welcome-ui/icons");
var import_variant_icon = require("@welcome-ui/variant-icon");
var import_utils = require("@welcome-ui/utils");
var import_system2 = require("@welcome-ui/system");

// src/styles.ts
var import_styled_components = __toESM(require("@xstyled/styled-components"));
var import_system = require("@welcome-ui/system");
var Label = (0, import_styled_components.default)("label").withConfig({ shouldForwardProp: import_system.shouldForwardProp })(
  ({ required }) => import_styled_components.css`
    position: relative;
    display: flex;
    flex-shrink: 0;
    max-width: 100%;
    align-items: center;
    line-height: lg;
    ${(0, import_styled_components.th)("labels")};
    ${import_styled_components.system};
    user-select: none;

    > * {
      &:not(:last-child) {
        margin-right: sm;
      }

      :last-child {
        ${required && requiredStyles};
      }
    }
  `
);
var requiredStyles = import_styled_components.css`
  &::after {
    content: '*';
    margin-left: xs;
    /* It prevents the element to shift the layout and it allows us to put it properly on top with super */
    line-height: 0;
    vertical-align: super;
    font-size: subtitle-sm;
    font-weight: bold;
    color: primary-500;
  }
`;
var Disabled = import_styled_components.default.div`
  display: inline-flex;
  margin-right: xs;
`;

// src/index.tsx
var Label2 = (0, import_system2.forwardRef)(
  ({
    checkableField,
    children,
    dataTestId,
    disabled,
    disabledIcon,
    icon,
    variant,
    withDisabledIcon = true,
    ...rest
  }, ref) => {
    const content = (0, import_utils.wrapChildren)(children);
    return /* @__PURE__ */ import_react.default.createElement(
      Label,
      {
        "data-testid": dataTestId,
        disabled,
        disabledIcon,
        ref,
        variant,
        ...rest
      },
      !checkableField && /* @__PURE__ */ import_react.default.createElement(import_variant_icon.VariantIcon, { icon, size: "sm", variant }),
      disabled && withDisabledIcon && /* @__PURE__ */ import_react.default.createElement(Disabled, null, disabledIcon || /* @__PURE__ */ import_react.default.createElement(import_icons.LockIcon, { size: "sm" })),
      content
    );
  }
);
Label2.displayName = "Label";
var StyledLabel = Label;
