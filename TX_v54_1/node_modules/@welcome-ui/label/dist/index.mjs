// src/index.tsx
import React from "react";
import { LockIcon } from "@welcome-ui/icons";
import { VariantIcon } from "@welcome-ui/variant-icon";
import { wrapChildren } from "@welcome-ui/utils";
import { forwardRef } from "@welcome-ui/system";

// src/styles.ts
import styled, { css, system, th } from "@xstyled/styled-components";
import { shouldForwardProp } from "@welcome-ui/system";
var Label = styled("label").withConfig({ shouldForwardProp })(
  ({ required }) => css`
    position: relative;
    display: flex;
    flex-shrink: 0;
    max-width: 100%;
    align-items: center;
    line-height: lg;
    ${th("labels")};
    ${system};
    user-select: none;

    > * {
      &:not(:last-child) {
        margin-right: sm;
      }

      :last-child {
        ${required && requiredStyles};
      }
    }
  `
);
var requiredStyles = css`
  &::after {
    content: '*';
    margin-left: xs;
    /* It prevents the element to shift the layout and it allows us to put it properly on top with super */
    line-height: 0;
    vertical-align: super;
    font-size: subtitle-sm;
    font-weight: bold;
    color: primary-500;
  }
`;
var Disabled = styled.div`
  display: inline-flex;
  margin-right: xs;
`;

// src/index.tsx
var Label2 = forwardRef(
  ({
    checkableField,
    children,
    dataTestId,
    disabled,
    disabledIcon,
    icon,
    variant,
    withDisabledIcon = true,
    ...rest
  }, ref) => {
    const content = wrapChildren(children);
    return /* @__PURE__ */ React.createElement(
      Label,
      {
        "data-testid": dataTestId,
        disabled,
        disabledIcon,
        ref,
        variant,
        ...rest
      },
      !checkableField && /* @__PURE__ */ React.createElement(VariantIcon, { icon, size: "sm", variant }),
      disabled && withDisabledIcon && /* @__PURE__ */ React.createElement(Disabled, null, disabledIcon || /* @__PURE__ */ React.createElement(LockIcon, { size: "sm" })),
      content
    );
  }
);
Label2.displayName = "Label";
var StyledLabel = Label;
export {
  Label2 as Label,
  StyledLabel
};
