var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  StyledTag: () => StyledTag,
  Tag: () => Tag2
});
module.exports = __toCommonJS(src_exports);
var import_react = __toESM(require("react"));
var import_utils2 = require("@welcome-ui/utils");
var import_system = require("@welcome-ui/system");
var import_icons = require("@welcome-ui/icons");

// src/styles.ts
var import_styled_components = __toESM(require("@xstyled/styled-components"));
var import_icon = require("@welcome-ui/icon");
var import_utils = require("@welcome-ui/utils");
var shapeStyles = (size, w, h) => import_styled_components.css`
  ${(0, import_styled_components.th)(`tags.shape.${size}`)}
  padding: 0;
  ${(w || h) && import_styled_components.css`
    width: ${(0, import_utils.getMax)(w || "0", h)};
    height: ${(0, import_utils.getMax)(w || "0", h)};
  `}
`;
var Tag = import_styled_components.default.div.withConfig({
  shouldForwardProp: (prop) => !["hasClickAction", "hasLink", "hasRemoveAction"].includes(prop)
})(
  ({ h, hasClickAction, hasLink, hasRemoveAction, length, size, variant, w }) => import_styled_components.css`
    ${(0, import_styled_components.th)("tags.default")};
    ${(0, import_styled_components.th)(`tags.variants.${variant}`)};
    ${(0, import_styled_components.th)(`tags.sizes.${size}`)}
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: md;
    line-height: initial; /* avoid cropped font */
    transition: medium;
    max-width: 100%;
    ${import_utils.overflowEllipsis}
    ${import_styled_components.system}
    ${length !== 1 && import_styled_components.css`
      span,
      p {
        ${import_utils.overflowEllipsis}
      }
    `}
    ${length === 1 && import_styled_components.css`
      justify-content: center;
      ${shapeStyles(size, w, h)};
    `};

    ${(hasLink || hasClickAction) && import_styled_components.css`
      cursor: pointer;
      text-decoration: none;

      &:hover {
        ${(0, import_styled_components.th)(`tags.hover.${variant}`)};
      }
    `};

    ${hasRemoveAction && import_styled_components.css`
      padding-right: xl;
    `}

    > *:not(:last-child) {
      margin-right: xxs;
    }

    & > svg {
      width: ${(0, import_styled_components.th)(`tags.icon.${size}`)};
      height: ${(0, import_styled_components.th)(`tags.icon.${size}`)};
    }

    > *:not(:only-child) {
      ${/* sc-selector */
  import_icon.StyledIcon}:last-child {
        opacity: 1;
        transition: opacity ${import_styled_components.th.transition("medium")};
        cursor: pointer;

        &:hover {
          opacity: 0.7;
        }
      }
    }
  `
);
var ActionIcon = import_styled_components.default.div(
  ({ size }) => import_styled_components.css`
    position: absolute;
    ${(0, import_styled_components.th)(`tags.sizes.${size}`)};
    top: 0;
    bottom: 0;
    right: 0;
    ${import_utils.centerContent};
  `
);
var Button = import_styled_components.default.button`
  all: unset;
  display: flex;
`;

// src/index.tsx
var Tag2 = (0, import_system.forwardRef)(
  ({
    as,
    children,
    dataTestId,
    href,
    onClick,
    onRemove,
    size = "md",
    to,
    variant = "default",
    ...rest
  }, ref) => {
    const content = (0, import_utils2.wrapChildren)(children);
    const childrenLength = !!(children || children === 0) && ["number", "string"].includes(typeof children) && children.toString().length;
    const hasLink = !!href || !!to;
    return /* @__PURE__ */ import_react.default.createElement(
      Tag,
      {
        as,
        "data-testid": dataTestId,
        hasClickAction: !!onClick,
        hasLink,
        hasRemoveAction: !!onRemove,
        href,
        length: childrenLength,
        onClick,
        ref,
        size,
        to,
        variant,
        ...rest
      },
      content,
      !!onRemove && /* @__PURE__ */ import_react.default.createElement(ActionIcon, { size }, /* @__PURE__ */ import_react.default.createElement(Button, { onClick: onRemove, title: "Remove", type: "button" }, /* @__PURE__ */ import_react.default.createElement(import_icons.CrossIcon, { size: "xs", title: "Remove" })))
    );
  }
);
Tag2.displayName = "Tag";
var StyledTag = Tag;
