// src/index.tsx
import React, { useMemo } from "react";
import {
  AlertIcon,
  InformationIcon,
  PromoteIcon,
  SquareAlertIcon,
  SuccessIcon
} from "@welcome-ui/icons";
import { forwardRef } from "@welcome-ui/system";

// src/styles.ts
import styled, { css } from "@xstyled/styled-components";
import { Box } from "@welcome-ui/box";
import { getVariantColor } from "@welcome-ui/utils";
var VariantIcon = styled(Box)(
  ({ variant }) => css`
    display: inline-flex;
    color: ${getVariantColor(variant)};
    flex-shrink: 0;
    align-self: center;
  `
);

// src/index.tsx
var VariantIcon2 = forwardRef(
  ({ icon, size = "md", variant, ...rest }, ref) => {
    const Icon = useMemo(() => {
      if (icon === null)
        return null;
      if (icon)
        return icon;
      if (variant === "default")
        return /* @__PURE__ */ React.createElement(PromoteIcon, { size });
      if (variant === "success")
        return /* @__PURE__ */ React.createElement(SuccessIcon, { size });
      if (variant === "info")
        return /* @__PURE__ */ React.createElement(InformationIcon, { size });
      if (variant === "warning")
        return /* @__PURE__ */ React.createElement(AlertIcon, { size });
      if (variant === "error")
        return /* @__PURE__ */ React.createElement(SquareAlertIcon, { size });
    }, [size, icon, variant]);
    return Icon ? /* @__PURE__ */ React.createElement(VariantIcon, { ref, variant, ...rest }, Icon) : null;
  }
);
VariantIcon2.displayName = "VariantIcon";
export {
  VariantIcon2 as VariantIcon
};
