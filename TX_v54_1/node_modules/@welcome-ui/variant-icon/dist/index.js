var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  VariantIcon: () => VariantIcon2
});
module.exports = __toCommonJS(src_exports);
var import_react = __toESM(require("react"));
var import_icons = require("@welcome-ui/icons");
var import_system = require("@welcome-ui/system");

// src/styles.ts
var import_styled_components = __toESM(require("@xstyled/styled-components"));
var import_box = require("@welcome-ui/box");
var import_utils = require("@welcome-ui/utils");
var VariantIcon = (0, import_styled_components.default)(import_box.Box)(
  ({ variant }) => import_styled_components.css`
    display: inline-flex;
    color: ${(0, import_utils.getVariantColor)(variant)};
    flex-shrink: 0;
    align-self: center;
  `
);

// src/index.tsx
var VariantIcon2 = (0, import_system.forwardRef)(
  ({ icon, size = "md", variant, ...rest }, ref) => {
    const Icon = (0, import_react.useMemo)(() => {
      if (icon === null)
        return null;
      if (icon)
        return icon;
      if (variant === "default")
        return /* @__PURE__ */ import_react.default.createElement(import_icons.PromoteIcon, { size });
      if (variant === "success")
        return /* @__PURE__ */ import_react.default.createElement(import_icons.SuccessIcon, { size });
      if (variant === "info")
        return /* @__PURE__ */ import_react.default.createElement(import_icons.InformationIcon, { size });
      if (variant === "warning")
        return /* @__PURE__ */ import_react.default.createElement(import_icons.AlertIcon, { size });
      if (variant === "error")
        return /* @__PURE__ */ import_react.default.createElement(import_icons.SquareAlertIcon, { size });
    }, [size, icon, variant]);
    return Icon ? /* @__PURE__ */ import_react.default.createElement(VariantIcon, { ref, variant, ...rest }, Icon) : null;
  }
);
VariantIcon2.displayName = "VariantIcon";
